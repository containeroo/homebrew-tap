# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Jiractl < Formula
  desc "A blazing fast CLI tool to do Jira stuff like a real hacker"
  homepage "https://containeroo.ch"
  version "1.0.0"
  license "GNU General Public License v3.0"

  depends_on "go" => :optional

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/containeroo/jiractl/releases/download/v1.0.0/jiractl_1.0.0_darwin_arm64.tar.gz"
      sha256 "901b610117aa02eaca98afc3bf86acbff5753ab32f872be32b15b1040b2c881e"

      def install
        bin.install "jiractl"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "bash")
        (bash_completion/"jiractl").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "zsh")
        (zsh_completion/"_jiractl").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/containeroo/jiractl/releases/download/v1.0.0/jiractl_1.0.0_darwin_amd64.tar.gz"
      sha256 "fc1fccb0af5509f375b60a1d6d57c1d1d9e11c3f226a514a0d78e6c672ecc3e7"

      def install
        bin.install "jiractl"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "bash")
        (bash_completion/"jiractl").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "zsh")
        (zsh_completion/"_jiractl").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/containeroo/jiractl/releases/download/v1.0.0/jiractl_1.0.0_linux_amd64.tar.gz"
      sha256 "f09b3624afcaafffce18e1192b80f2d2ef393d8473dc367d10744a0f384f01ff"

      def install
        bin.install "jiractl"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "bash")
        (bash_completion/"jiractl").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "zsh")
        (zsh_completion/"_jiractl").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/containeroo/jiractl/releases/download/v1.0.0/jiractl_1.0.0_linux_arm64.tar.gz"
      sha256 "26871853ac567be2400794cbf05ae1d81b3660e36bc8d5b405b1b0ecd5bba1a8"

      def install
        bin.install "jiractl"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "bash")
        (bash_completion/"jiractl").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "zsh")
        (zsh_completion/"_jiractl").write output
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/containeroo/jiractl/releases/download/v1.0.0/jiractl_1.0.0_linux_armv6.tar.gz"
      sha256 "ce79491db617b698eb3fae810d97f5077a07089ffb54ce50988b72eef6a7d325"

      def install
        bin.install "jiractl"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "bash")
        (bash_completion/"jiractl").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "zsh")
        (zsh_completion/"_jiractl").write output
      end
    end
  end

  test do
    system "#{bin}/jiractl version"
  end
end
