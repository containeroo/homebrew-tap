# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Jiractl < Formula
  desc "A blazing fast CLI tool to do Jira stuff like a real hacker"
  homepage "https://containeroo.ch"
  version "1.1.0"
  license "GNU General Public License v3.0"

  depends_on "go" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/containeroo/jiractl/releases/download/v1.1.0/jiractl_1.1.0_darwin_amd64.tar.gz"
      sha256 "1ac0a3c4ce6844ef17737d8d379ad90f403735275f80f47593f6f36d6649fe42"

      def install
        bin.install "jiractl"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "bash")
        (bash_completion/"jiractl").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "zsh")
        (zsh_completion/"_jiractl").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/containeroo/jiractl/releases/download/v1.1.0/jiractl_1.1.0_darwin_arm64.tar.gz"
      sha256 "2e83e168eeb6edbcf15f6a17664c90c87159b7983a652498c09425714edeec0e"

      def install
        bin.install "jiractl"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "bash")
        (bash_completion/"jiractl").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "zsh")
        (zsh_completion/"_jiractl").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/containeroo/jiractl/releases/download/v1.1.0/jiractl_1.1.0_linux_amd64.tar.gz"
      sha256 "06a345c8f5d0cad5784c87fa09bfea3f4f974c9d16b9b5ae31df5b2e2b29152f"

      def install
        bin.install "jiractl"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "bash")
        (bash_completion/"jiractl").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "zsh")
        (zsh_completion/"_jiractl").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/containeroo/jiractl/releases/download/v1.1.0/jiractl_1.1.0_linux_arm64.tar.gz"
      sha256 "23263decf67df60a946456d836421e282e0ac7c68fe6fb2997be4a33e0e4c91f"

      def install
        bin.install "jiractl"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "bash")
        (bash_completion/"jiractl").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "zsh")
        (zsh_completion/"_jiractl").write output
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/containeroo/jiractl/releases/download/v1.1.0/jiractl_1.1.0_linux_armv6.tar.gz"
      sha256 "29b084fc31082ab333c1fd33896314ca33570871613aa65b77aa5cb86a82e598"

      def install
        bin.install "jiractl"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "bash")
        (bash_completion/"jiractl").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"jiractl", "completion", "zsh")
        (zsh_completion/"_jiractl").write output
      end
    end
  end

  test do
    system "#{bin}/jiractl version"
  end
end
