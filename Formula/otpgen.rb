# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Otpgen < Formula
  desc "Simple CLI tool to generate OTP tokens"
  homepage "https://containeroo.ch"
  version "3.0.0"
  license "GNU General Public License v3.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/containeroo/otpgen/releases/download/v3.0.0/otpgen_3.0.0_darwin_arm64.tar.gz"
      sha256 "c30f0d52003c80ec96d460740c7df75af846cb5dfb922076fbfff75d1e3f1a53"

      def install
        bin.install "otpgen"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"otpgen", "completion", "bash")
        (bash_completion/"otpgen").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"otpgen", "completion", "zsh")
        (zsh_completion/"_otpgen").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/containeroo/otpgen/releases/download/v3.0.0/otpgen_3.0.0_darwin_amd64.tar.gz"
      sha256 "f62965b21e9c3eb980ab2f3d6b9be5b8539a08fd6ed93dc636192b833396b45e"

      def install
        bin.install "otpgen"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"otpgen", "completion", "bash")
        (bash_completion/"otpgen").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"otpgen", "completion", "zsh")
        (zsh_completion/"_otpgen").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/containeroo/otpgen/releases/download/v3.0.0/otpgen_3.0.0_linux_amd64.tar.gz"
      sha256 "1bfb7c575d6ed598d2f6eebdc1846543ada45f044de4f85637e006786d22f3cf"

      def install
        bin.install "otpgen"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"otpgen", "completion", "bash")
        (bash_completion/"otpgen").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"otpgen", "completion", "zsh")
        (zsh_completion/"_otpgen").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/containeroo/otpgen/releases/download/v3.0.0/otpgen_3.0.0_linux_arm64.tar.gz"
      sha256 "11c7a3dcf6d4a4a4239d8f2a967250c98f8b21a381c2a7d4503c20e2de2c1062"

      def install
        bin.install "otpgen"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"otpgen", "completion", "bash")
        (bash_completion/"otpgen").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"otpgen", "completion", "zsh")
        (zsh_completion/"_otpgen").write output
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/containeroo/otpgen/releases/download/v3.0.0/otpgen_3.0.0_linux_armv6.tar.gz"
      sha256 "cc5234e5125344a5be805ecff196323f41527dff29e8c4503740747d72cf7aa1"

      def install
        bin.install "otpgen"

        # Install bash completion
        output = Utils.safe_popen_read(bin/"otpgen", "completion", "bash")
        (bash_completion/"otpgen").write output

        # Install zsh completion
        output = Utils.safe_popen_read(bin/"otpgen", "completion", "zsh")
        (zsh_completion/"_otpgen").write output
      end
    end
  end

  depends_on "go" => :optional

  test do
    system "#{bin}/otpgen version"
  end
end
